{"version":3,"sources":["components/Notification.js","services/persons.js","App.js","index.js"],"names":["Notification","props","message","messageType","className","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Filter","nameFilter","handleNameFilterChange","value","onChange","Person","person","deletePerson","name","toLowerCase","indexOf","number","onClick","window","confirm","Persons","persons","map","key","PersonForm","addPerson","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","type","App","useState","setPersons","setNewName","setNewNumber","setNameFilter","errorMessage","setErrorMessage","setMessageType","useEffect","personService","initialPersons","event","target","preventDefault","find","personObject","returnedPerson","per","setTimeout","catch","error","JSON","stringify","concat","filter","p","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.23b50c53.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Notification = (props) => {\r\n  const { message, messageType } = props\r\n    if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className={messageType}>\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst del = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, del }","import React, { useState, useEffect } from 'react'\nimport Notification from './components/Notification'\nimport personService from './services/persons'\n\nconst Filter = (props) => {\n  const { nameFilter, handleNameFilterChange } = props\n  return(\n    <input value = {nameFilter}\n      onChange= {handleNameFilterChange}\n  />\n  )\n}\n\nconst Person = (props) => {\n  const { person, nameFilter, deletePerson } = props\n  if(person.name.toLowerCase().indexOf(nameFilter.toLowerCase()) !== -1){\n  return(\n    <div>\n      {person.name} {person.number} \n      <button onClick={() => \n        {if(window.confirm(`Delete ${person.name}?`))deletePerson(person.id)}}>delete\n      </button>\n    </div>\n  )\n  } else {\n    return(<></>)\n  }\n}\n\nconst Persons = (props) => {\n  const { persons, nameFilter, deletePerson} = props\n  return(\n    <div>\n      {persons.map(person => \n    <Person key={person.name} person={person} nameFilter={nameFilter} deletePerson={deletePerson}/>\n    )}\n    </div>\n  )\n}\n\nconst PersonForm = (props) => {\n  const { addPerson, newName, handleNameChange, newNumber, handleNumberChange } = props\n  return(\n    <form onSubmit={addPerson}>\n      <div>\n        name: \n        <input\n          value={newName}\n          onChange={handleNameChange}\n        />\n      </div>\n      <div>\n        number: \n        <input \n          value={newNumber}\n          onChange={handleNumberChange}\n        />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ nameFilter, setNameFilter ] = useState('')\n  const [ errorMessage, setErrorMessage ] = useState(null)\n  const [ messageType, setMessageType ] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const person = persons.find(person => person.name === newName)\n    //if person exists, ask if update number\n    if(person) {\n      if(window.confirm(`${newName} is already added to the phonebook, replace the old number with a new one?`)) {       \n        const personObject = { ...person, number: newNumber }\n        personService\n          .update(person.id, personObject)\n          .then(returnedPerson => {\n            setPersons(persons.map(per => per.name !== person.name ? per : returnedPerson))\n            setNewName('')\n            setNewNumber('')\n\n            setMessageType('success')\n            setErrorMessage(\n              `Updated the phone number of '${person.name}'`\n            )\n            \n            setTimeout(() => {\n              setErrorMessage(null)\n            }, 5000)   \n          })\n          .catch(error => {\n            setMessageType('error')\n            setErrorMessage(\n              JSON.stringify(error.response.data)\n            )\n            setTimeout(() => {\n              setErrorMessage(null)\n            }, 5000)   \n          })\n      } \n      \n    }\n    //if person does not exist yet, create a new person\n    else {\n      const personObject = {\n        name: newName,\n        number: newNumber\n      }\n      personService\n        .create(personObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNewName('')\n          setNewNumber('')\n\n          setMessageType('success')\n          setErrorMessage(\n            `Added '${returnedPerson.name}'`\n          )\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)   \n        })\n        .catch(error => {\n          setMessageType('error')\n          setErrorMessage(JSON.stringify(error.response.data))\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)  \n        })\n    }\n  }\n\n  const deletePerson = (id) => {\n      personService\n        .del(id)\n        .then(() =>  {\n          setPersons(persons.filter(p => p.id !== id))\n          setMessageType('success')\n          setErrorMessage(\n            `Deleted successfully`\n          )\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)   \n        })\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n  const handleNameFilterChange = (event) => {\n    setNameFilter(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={errorMessage} messageType={messageType} />\n      filter shown with\n      <Filter nameFilter={nameFilter} handleNameFilterChange={handleNameFilterChange} />\n      \n      <h2>add a new</h2>\n\n      <PersonForm addPerson={addPerson} newName={newName} handleNameChange={handleNameChange} \n      newNumber={newNumber} handleNumberChange={handleNumberChange}\n      />\n\n      <h2>Numbers</h2>\n\n      <Persons persons={persons} nameFilter={nameFilter} deletePerson ={deletePerson} />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}